name: Testops

on:
  schedule:
    - cron: "0 */12 * * *"
  workflow_dispatch:
    inputs:
      ALLURE_JOB_RUN_ID:
        description: ALLURE_JOB_RUN_ID - service parameter (leave blank)
        required: false
      ENDPOINT:
        description: Endpoint
        required: false
        default: https://demo.testops.cloud/
      BROWSER:
        description: Browser
        required: false
        default: Opera
      OS:
        description: OS
        required: false
        default: macOS 
      ALLURE_USERNAME:
        description: "ALLURE_USERNAME service parameter. Leave blank"
        required: false

env:
  ALLURE_ENDPOINT: https://demo.qatools.cloud/  # Make sure this matches your real endpoint
  ALLURE_PROJECT_ID: 4535                       # Your actual Allure project ID
  ALLURE_TOKEN: ${{ secrets.TESTOPS_TOKEN }}    # Secret with correct permissions
  ALLURE_RESULTS: allure-results

jobs:
  autotests: 
    name: Run tests and upload to Allure
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install allure-pytest

      - name: Check versions
        run: |
          python -m pip list
          pytest --version

      - name: Install allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: ${{ env.ALLURE_ENDPOINT }}
          allure-token: ${{ env.ALLURE_TOKEN }}
          allure-project-id: ${{ env.ALLURE_PROJECT_ID }}

      - name: Show environment values
        run: |
          echo "Endpoint: $ENDPOINT"
          echo "Browser: $BROWSER"
          echo "OS: $OS"
          echo "Allure Job ID: ${ALLURE_JOB_RUN_ID:-manual-run}"
        env:
          ENDPOINT: ${{ github.event.inputs.ENDPOINT }}
          BROWSER: ${{ github.event.inputs.BROWSER }}
          OS: ${{ github.event.inputs.OS }}
          ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}

      - name: Run tests with pytest
        run: |
          pytest --alluredir=${ALLURE_RESULTS} --capture=no
        env:
          ENDPOINT: ${{ github.event.inputs.ENDPOINT }}
          BROWSER: ${{ github.event.inputs.BROWSER }}
          OS: ${{ github.event.inputs.OS }}

      - name: Debug allure results
        run: |
          echo "Contents of ${ALLURE_RESULTS} directory:"
          ls -la ${ALLURE_RESULTS}

      - name: Upload results to Allure TestOps
        run: |
          allurectl upload --results=${ALLURE_RESULTS} --debug
        env:
          ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}
